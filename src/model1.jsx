/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { convertHexToDecimal } from "./utils/convertHextoDecimal"

export function Model1(props) {
  const { nodes, materials } = useGLTF("https://cdn.shopify.com/s/files/1/0739/0206/3938/files/model1.glb")
  const { bladesColor, discColor1, discColor2 } = props

  //Blades
  materials["Plaster"].color.setHex(convertHexToDecimal(bladesColor))
  materials["Plaster"].metalness = 0.3
  materials["Plaster"].roughness = 0.1

  //front and end of handle
  materials["Plaster (1)"].color.setHex(0xf1d797)
  materials["Plaster (3)"].color.setHex(0xf1d797)
  
  //fixed stripe
  materials["Plaster (2)"].color.setHex(0x5b5958)
  materials["Plaster (4)"].color.setHex(0x5b5958)
  materials["Plaster (68)"].color.setHex(0x5b5958)

  //31
  materials["Plaster (29)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (5)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (6)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (7)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (8)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (9)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (10)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (11)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (12)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (13)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (14)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (15)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (16)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (17)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (18)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (19)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (20)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (21)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (22)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (23)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (24)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (25)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (26)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (27)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (28)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (69)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (70)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (71)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (72)"].color.setHex(convertHexToDecimal(discColor1))
  materials["Plaster (73)"].color.setHex(convertHexToDecimal(discColor2))
  materials["Plaster (75)"].color.setHex(convertHexToDecimal(discColor1))

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials.Material}
      />
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_1.geometry}
          material={materials["Plaster (2)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_2.geometry}
          material={materials["Plaster (3)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_3.geometry}
          material={materials["Plaster (4)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_4.geometry}
          material={materials["Plaster (75)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_5.geometry}
          material={materials["Plaster (73)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_6.geometry}
          material={materials["Plaster (68)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_7.geometry}
          material={materials["Plaster (72)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_8.geometry}
          material={materials["Plaster (71)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_9.geometry}
          material={materials["Plaster (27)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_10.geometry}
          material={materials["Plaster (69)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_11.geometry}
          material={materials["Plaster (28)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_12.geometry}
          material={materials["Plaster (70)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_13.geometry}
          material={materials["Plaster (26)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_14.geometry}
          material={materials["Plaster (25)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_15.geometry}
          material={materials["Plaster (24)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_16.geometry}
          material={materials["Plaster (23)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_17.geometry}
          material={materials["Plaster (22)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_18.geometry}
          material={materials["Plaster (21)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_19.geometry}
          material={materials["Plaster (20)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_20.geometry}
          material={materials["Plaster (18)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_21.geometry}
          material={materials["Plaster (19)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_22.geometry}
          material={materials["Plaster (17)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_23.geometry}
          material={materials["Plaster (14)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_24.geometry}
          material={materials["Plaster (15)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_25.geometry}
          material={materials["Plaster (16)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_26.geometry}
          material={materials["Plaster (13)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_27.geometry}
          material={materials["Plaster (9)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_28.geometry}
          material={materials["Plaster (10)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_29.geometry}
          material={materials["Plaster (11)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_30.geometry}
          material={materials["Plaster (12)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_31.geometry}
          material={materials["Plaster (8)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_32.geometry}
          material={materials.Plaster}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_33.geometry}
          material={materials["Plaster (1)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_34.geometry}
          material={materials["Plaster (29)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_35.geometry}
          material={materials["Plaster (5)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_36.geometry}
          material={materials["Plaster (6)"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.handl_Random_37.geometry}
          material={materials["Plaster (7)"]}
        />
      </group>
    </group>
  )
}

useGLTF.preload("/model1.glb")
